buildscript {
    repositories {
      jcenter()
  }
    dependencies {
        // STUFF FOR JACOCO
        classpath 'com.palantir:jacoco-coverage:0.3.0'
        // jacoco-coverage blows up unless you specify guava dependency
        classpath 'com.google.guava:guava:18.0'
        // Plugin for spitting out coverage numbers to the console
        classpath 'com.github.ksoichiro:gradle-console-reporter:0.4.0'
        // STUFF FOR BINTRAY
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'project-report'
apply plugin: 'com.jfrog.bintray'

repositories {
    maven {
        url "http://www.evosuite.org/m2"
    }
    jcenter()
}

// ========== PROPERTIES FOR GRADLE BUILD - DEPENDENCY VERSIONS / ETC
ext {
    slf4jVersion = '1.7.7'
    servletApiVersion = '3.1.0'
    zipkinVersion = '1.5.1'

    junitVersion = '4.11'
    mockitoVersion = '1.9.5'
    logbackVersion = '1.1.2'
    jacksonVersion = '2.4.2'
    assertJVersion = '2.2.0'
    junitDataproviderVersion = '1.10.1'

    // JACOCO PROPERTIES
    jacocoToolVersion = '0.7.6.201602180812'
    // Anything in this jacocoExclusions list will be excluded from coverage reports.
    jacocoExclusions = []
    jacocoCoverageThresholdSetup = {
        jacocoCoverage {
            // Enforce minimum code coverage. See https://github.com/palantir/gradle-jacoco-coverage for the full list of options.
            reportThreshold 0.1, INSTRUCTION
            reportThreshold 0.0, BRANCH
        }
    }
}


dependencies {

    slf4jVersion = '1.7.7'
    servletApiVersion = '3.1.0'
    zipkinVersion = '1.5.1'

    junitVersion = '4.11'
    mockitoVersion = '1.9.5'
    logbackVersion = '1.1.2'
    jacksonVersion = '2.4.2'
    assertJVersion = '2.2.0'
    junitDataproviderVersion = '1.10.1'

    compile(
            "io.dropwizard.metrics:metrics-core:3.1.0",
            "com.google.code.findbugs:jsr305:2.0.3",
            "com.newrelic.agent.java:newrelic-api:3.30.1",
            "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.6.1",
            "com.fasterxml.jackson.core:jackson-databind:2.6.1"
    )
    testCompile(
            "junit:junit-dep:$junitVersion",
            "junit:junit:4.12",
            "org.mockito:mockito-core:$mockitoVersion",
            "com.fasterxml.jackson.core:jackson-core:$jacksonVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            "ch.qos.logback:logback-classic:$logbackVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "com.tngtech.java:junit-dataprovider:$junitDataproviderVersion",
            "org.evosuite:evosuite-standalone-runtime:1.0.1"
    )

}

ext.isReleaseVersion = !version.endsWith('SNAPSHOT')

task wrapper(type: Wrapper) {
  gradleVersion = '2.6'
}

// ========== COMBO TEST REPORT - View the combined/merged report at: [project_root]/build/reports/tests/index.html
apply from: file(rootProject.projectDir.getAbsolutePath() + '/gradle/junitComboTestReport.gradle')

// ========== JACOCO SETUP - View the combined/merged report at: [project_root]/build/reports/jacoco/jacocoRootReport/html/index.html.
//                           Individual reports for each submodule can be found at: [project_root]/[submodule]/build/reports/jacoco/test/html/index.html
apply from: file(rootProject.projectDir.getAbsolutePath() + '/gradle/jacoco.gradle')

// ========== BINTRAY PUBLISHING
apply from: file(rootProject.projectDir.getAbsolutePath() + '/gradle/bintrayPublishing.gradle')

// ========== MISCELLANEOUS BUILD STUFF
allprojects {
    group = groupId // Necessary for the maven install task to function correctly
}